# Generated by Django 5.2.4 on 2025-09-16 19:58

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('players', '0001_initial'),
        ('tournament_categories', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('payment_reference', models.TextField(blank=True, default='')),
                ('comment', models.CharField(blank=True, default='', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('payment_status', models.CharField(blank=True, default='', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations_as_partner', to='players.player')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations_as_player', to='players.player')),
                ('tournament_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='tournament_categories.tournamentcategory')),
            ],
            options={
                'verbose_name': 'Registration',
                'verbose_name_plural': 'Registrations',
                'db_table': 'registrations',
                'ordering': ['-created_at', '-id'],
                'get_latest_by': 'created_at',
                'default_related_name': 'registrations',
                'indexes': [models.Index(fields=['tournament_category'], name='reg_idx_tc'), models.Index(fields=['player'], name='reg_idx_player'), models.Index(fields=['partner'], name='reg_idx_partner'), models.Index(fields=['is_active'], name='reg_idx_is_active'), models.Index(fields=['payment_status'], name='reg_idx_payment_status'), models.Index(fields=['-created_at', '-id'], name='reg_idx_created_desc')],
                'constraints': [models.UniqueConstraint(fields=('tournament_category', 'player'), name='uq_registration_tc_player'), models.UniqueConstraint(fields=('tournament_category', 'partner'), name='uq_registration_tc_partner'), models.UniqueConstraint(fields=('tournament_category', 'player', 'partner'), name='uq_registration_tc_player_partner'), models.CheckConstraint(condition=models.Q(('player', models.F('partner')), _negated=True), name='ck_registration_player_ne_partner'), models.CheckConstraint(condition=models.Q(('paid_amount__gte', 0)), name='ck_registration_paid_amount_gte_0')],
            },
        ),
    ]
